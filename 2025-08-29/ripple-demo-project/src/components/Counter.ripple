<!-- 
  Counter.ripple
  Ripple フレームワークコンポーネントの概念実装
  注意: これは調査に基づく概念実証コードです
-->
<script>
  import { signal } from 'ripple';
  
  // Signal-basedな状態管理
  let count = signal(0);
  
  const increment = () => {
    count.set(count.value + 1);
  };
  
  const decrement = () => {
    count.set(count.value - 1);
  };
  
  const reset = () => {
    count.set(0);
  };
</script>

<div class="counter">
  <h2>Counter: {count}</h2>
  <div class="controls">
    <button on:click={increment}>+</button>
    <button on:click={decrement}>-</button>
    <button on:click={reset}>Reset</button>
  </div>
</div>

<style>
  .counter {
    text-align: center;
    padding: 20px;
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    background-color: #f9f9f9;
  }
  
  .controls {
    margin-top: 15px;
  }
  
  button {
    margin: 0 10px;
    padding: 10px 20px;
    font-size: 16px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    background: #007bff;
    color: white;
    transition: background-color 0.2s;
  }
  
  button:hover {
    background: #0056b3;
  }
  
  button:active {
    transform: scale(0.98);
  }
</style>