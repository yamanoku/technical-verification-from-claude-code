<!-- 
  TodoList.ripple
  Ripple „Éï„É¨„Éº„É†„ÉØ„Éº„ÇØ TodoList „Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅÆÊ¶ÇÂøµÂÆüË£Ö
  Ê≥®ÊÑè: „Åì„Çå„ÅØË™øÊüª„Å´Âü∫„Å•„ÅèÊ¶ÇÂøµÂÆüË®º„Ç≥„Éº„Éâ„Åß„Åô
-->
<script>
  import { signal, computed } from 'ripple';
  
  let todos = signal([]);
  let newTodo = signal('');
  
  const addTodo = () => {
    if (newTodo.value.trim()) {
      todos.update(prev => [
        ...prev,
        { 
          id: Date.now(), 
          text: newTodo.value.trim(), 
          completed: false 
        }
      ]);
      newTodo.set('');
    }
  };
  
  const toggleTodo = (id) => {
    todos.update(prev => prev.map(todo => 
      todo.id === id ? { ...todo, completed: !todo.completed } : todo
    ));
  };
  
  const deleteTodo = (id) => {
    todos.update(prev => prev.filter(todo => todo.id !== id));
  };
  
  const completedCount = computed(() => 
    todos.value.filter(todo => todo.completed).length
  );
  
  const totalCount = computed(() => todos.value.length);
  
  const handleKeydown = (event) => {
    if (event.key === 'Enter') {
      addTodo();
    }
  };
</script>

<div class="todo-app">
  <h1>üìù Todo App</h1>
  
  <div class="add-todo">
    <input 
      bind:value={newTodo}
      placeholder="Êñ∞„Åó„ÅÑ„Çø„Çπ„ÇØ„ÇíËøΩÂä†..."
      on:keydown={handleKeydown}
    />
    <button on:click={addTodo}>ËøΩÂä†</button>
  </div>
  
  <div class="stats">
    ÂÆå‰∫Ü: {completedCount} / {totalCount}
  </div>
  
  <ul class="todo-list">
    {#each todos as todo (todo.id)}
      <li class:completed={todo.completed}>
        <input 
          type="checkbox" 
          checked={todo.completed}
          on:change={() => toggleTodo(todo.id)}
        />
        <span class="todo-text">{todo.text}</span>
        <button 
          class="delete-btn" 
          on:click={() => deleteTodo(todo.id)}
          title="ÂâäÈô§"
        >
          üóëÔ∏è
        </button>
      </li>
    {/each}
  </ul>
  
  {#if totalCount === 0}
    <div class="empty-state">
      <p>üìã „Åæ„Å†„Çø„Çπ„ÇØ„Åå„ÅÇ„Çä„Åæ„Åõ„Çì„ÄÇ‰∏ä„Åã„ÇâËøΩÂä†„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºÅ</p>
    </div>
  {/if}
</div>

<style>
  .todo-app {
    max-width: 500px;
    margin: 0 auto;
    padding: 20px;
  }
  
  h1 {
    text-align: center;
    color: #333;
    margin-bottom: 30px;
  }
  
  .add-todo {
    display: flex;
    gap: 10px;
    margin-bottom: 20px;
  }
  
  .add-todo input {
    flex: 1;
    padding: 12px;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 14px;
  }
  
  .add-todo input:focus {
    outline: none;
    border-color: #007bff;
    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);
  }
  
  .add-todo button {
    padding: 12px 20px;
    background: #28a745;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
    transition: background-color 0.2s;
  }
  
  .add-todo button:hover {
    background: #218838;
  }
  
  .stats {
    margin-bottom: 20px;
    padding: 10px;
    background: #f8f9fa;
    border-radius: 4px;
    font-weight: bold;
    color: #666;
    text-align: center;
  }
  
  .todo-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  
  .todo-list li {
    display: flex;
    align-items: center;
    padding: 12px;
    border-bottom: 1px solid #eee;
    gap: 12px;
    transition: background-color 0.2s;
  }
  
  .todo-list li:hover {
    background-color: #f8f9fa;
  }
  
  .todo-list li.completed {
    opacity: 0.7;
  }
  
  .todo-list li.completed .todo-text {
    text-decoration: line-through;
    color: #666;
  }
  
  .todo-text {
    flex: 1;
    font-size: 14px;
  }
  
  .delete-btn {
    background: none;
    border: none;
    cursor: pointer;
    font-size: 16px;
    padding: 4px;
    border-radius: 4px;
    transition: background-color 0.2s;
  }
  
  .delete-btn:hover {
    background-color: #f5f5f5;
  }
  
  .empty-state {
    text-align: center;
    padding: 40px 20px;
    color: #666;
    font-style: italic;
  }
  
  input[type="checkbox"] {
    width: 18px;
    height: 18px;
    cursor: pointer;
  }
</style>